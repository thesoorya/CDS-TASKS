Database Schema
1. Users

    UserID (Primary Key)
    Name
    Email (Unique)
    Phone
    Address
    CreatedDate

2. Products

    ProductID (Primary Key)
    Name
    Category
    Price
    StockQuantity
    AddedDate

3. Orders

    OrderID (Primary Key)
    UserID (Foreign Key references Users.UserID)
    OrderDate
    TotalAmount

4. OrderDetails

    OrderDetailID (Primary Key)
    OrderID (Foreign Key references Orders.OrderID)
    ProductID (Foreign Key references Products.ProductID)
    Quantity
    Price

5. Reviews

    ReviewID (Primary Key)
    ProductID (Foreign Key references Products.ProductID)
    UserID (Foreign Key references Users.UserID)
    Rating (1-5)
    ReviewText
    ReviewDate

SQL Question Paper
Section A: Advanced Queries (10 points each)

    Write a query to find the top 5 products with the highest total sales (quantity sold multiplied by price).

    Retrieve the names of users who placed orders totaling more than $500 in the last month.

    Find the product categories with the lowest average ratings.

    Write a query to list all orders where at least one product was out of stock during the order date.

    Display the total revenue generated by each product category.

Section B: Subqueries and Joins (15 points each)

    Write a query to list users who have ordered all the products in a specific category.

    Retrieve details of products that have never been ordered.

    Find users who have rated a product but have never ordered it.

    Write a query to calculate the average order value for each user.

    Display the names and order counts of the top 3 most frequent buyers.

Section C: Complex Scenarios (20 points each)

    Write a query to calculate the average delivery time for each product based on its order and delivery dates (assume a Delivery table exists).

    Find users who ordered the same product more than once with different prices (e.g., during discounts).

    Write a query to determine the most expensive order ever placed and list all its details.

    Retrieve the names of users who have reviewed the same product multiple times and list their reviews.

    Write a query to calculate the total revenue lost due to products going out of stock.